c
曲がるところを固定すると(u+d)*(l+r)
累積和でやってしまったがナイーブに見ても間に合うらしい

d
到達可能な場所は頂点数を超えないので頂点数オーダーで見れる

e
p:ダイクストラでいける
隣接への移動コストをある程度高速に求められれば良い
p:t[k][d] := t%K = kのとき、dに行くまでにかかる時間
これは後ろから見ていけばいいよね
（U....Uのとき後ろのUが真ん中全部に影響を及ぼす。
つまり、後ろからアルファベット単位で見てその影響を配るのがよい。
←→前からマスを見てコストを探る）
これはO(K)
これを準備すればダイクストラで終了する

p:ところでinfをかなりでかくしておかないとダメ
（最悪のグネグネ移動で1000*1000*100000くらい時間かかる）
これのせいで1WAが出た
これおそらく他の問題でもハマりどころになりうるので非常に要注意
