AGC031
https://img.atcoder.jp/agc031/editorial.pdf

A - Colorful Subsequence
https://atcoder.jp/contests/agc031/tasks/agc031_a

subsequenceというものの性質を理解しているかゲーっぽい
* subsequenceなのでどこをとってもいい
* 別の場所から取れば別
そして各文字ごとに最大の文字が1個までなので、各cに対してcnt(c)+1通りだけとり方があり、これらすべての積-1(空文字列)が答えとなる。

B - Reversi
https://atcoder.jp/contests/agc031/tasks/agc031_b

axxxaxxa
みたいな並びのとき、a1a3に対して操作すると全部aになるが、a1a2してa2a3しても同じように全部aになる。
よって、
* aの操作は前後のaとの間でのみ行われるとして良い
* aの操作は左から順に行われるとして良い
ということがわかる。

上より、
dp[i] := 石がi番目までしかなかった時のありうるパターン数
とすると、dpにより求めることができる。
なぜなら、i番目の色がcで、直前にあるcの位置をlast(c)とすると、
dp[i] = dp[i-1](操作しないとき) + dp[last(c)](操作するとき、last(c)+1番目以降は操作により塗りつぶされるので見なくていい)
という更新式が成り立つからである。
(last(c)==i-1のときは操作してもしなくても変わらないので例外であり、dp[i]=dp[i-1])

解説はよくわからないが、最初の考察なしでdpの更新を考えるとこうなるっぽい？
